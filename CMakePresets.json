{
  "version": 4,
  "cmakeMinimumRequired": {
    "major": 3,
    "minor": 23,
    "patch": 0
  },
  "configurePresets": [
    {
      "name": "cmake-pedantic",
      "hidden": true,
      "warnings": {
        "dev": true,
        "deprecated": true,
        "uninitialized": true,
        "unusedCli": true,
        "systemVars": false
      },
      "errors": {
        "dev": false,
        "deprecated": true
      }
    },
    {
      "name": "dev-mode",
      "hidden": true,
      "inherits": "cmake-pedantic",
      "cacheVariables": {
        "FMT_DEVELOPER_MODE": "ON"
      }
    },
    {
      "name": "cppcheck",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_CPPCHECK": "cppcheck;--inline-suppr"
      }
    },
    {
      "name": "clang-tidy",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_CLANG_TIDY": "clang-tidy-18;--header-filter=^${sourceDir}/"
      }
    },
    {
      "name": "ci-std",
      "description":
          "This preset makes sure the project actually builds with at least the specified standard",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_EXTENSIONS": "ON",
        "CMAKE_CXX_STANDARD": "23",
        "CMAKE_CXX_STANDARD_REQUIRED": "ON"
      }
    },
    {
      "name": "flags-Linux",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_FLAGS":
            "-U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=3 -fstack-protector-strong -fcf-protection=full -fstack-clash-protection -Wall -Wextra -Wpedantic -Wno-conversion -Wno-sign-conversion -Wcast-qual -Wformat=2 -Wundef -Werror=float-equal -Wshadow -Wcast-align -Wunused -Wnull-dereference -Wdouble-promotion -Wno-implicit-fallthrough -Wextra-semi -Woverloaded-virtual -Wnon-virtual-dtor -Wno-old-style-cast",
        "CMAKE_EXE_LINKER_FLAGS":
            "-Wl,--allow-shlib-undefined,--as-needed,-z,noexecstack,-z,relro,-z,now",
        "CMAKE_SHARED_LINKER_FLAGS":
            "-Wl,--allow-shlib-undefined,--as-needed,-z,noexecstack,-z,relro,-z,now"
      },
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Linux"
      }
    },
    {
      "name": "flags-Darwin",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_FLAGS":
            "-fstack-protector-strong -Wall -Wextra -Wpedantic -Wno-conversion -Wno-sign-conversion -Wcast-qual -Wformat=2 -Wundef -Werror=float-equal -Wshadow -Wcast-align -Wunused -Wnull-dereference -Wdouble-promotion -Wno-implicit-fallthrough -Wextra-semi -Woverloaded-virtual -Wnon-virtual-dtor -Wno-old-style-cast"
      },
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Darwin"
      }
    },
    {
      "name": "flags-Windows",
      "description":
          "Note that all the flags after /W3 are required for MSVC to conform to the language standard",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Debug",
        "CMAKE_CXX_COMPILER": "cl",
        "CMAKE_CXX_FLAGS_PEDANTIC":
            "/sdl /guard:cf /utf-8 /diagnostics:caret /w14165 /w44242 /w44254 /w44263 /w34265 /w34287 /w44296 /w44365 /w44388 /w44464 /w14545 /w14546 /w14547 /w14549 /w14555 /w34619 /w34640 /w24826 /w14905 /w14906 /w14928 /w45038 /W3 /permissive- /volatile:iso /Zc:inline /Zc:preprocessor /Zc:enumTypes /Zc:lambda /Zc:__cplusplus /Zc:externConstexpr /Zc:throwingNew /EHsc",
        "CMAKE_EXE_LINKER_FLAGS_PEDANTIC": "/machine:x64 /guard:cf"
      },
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Windows"
      }
    },
    {
      "name": "gen-Linux",
      "generator": "Ninja",
      "hidden": true,
      "inherits": [
        "flags-Linux",
        "ci-std"
      ],
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Debug"
      }
    },
    {
      "name": "gen-Darwin",
      "generator": "Ninja",
      "hidden": true,
      "inherits": [
        "flags-Darwin",
        "ci-std"
      ],
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Debug"
      }
    },
    {
      "name": "gen-win64",
      "inherits": [
        "flags-Windows",
        "ci-std"
      ],
      "generator": "Ninja",
      "hidden": true
    },
    {
      "name": "coverage-Linux",
      "binaryDir": "${sourceDir}/build/coverage",
      "inherits": "gen-Linux",
      "hidden": true,
      "cacheVariables": {
        "FMT_ENABLE_COVERAGE": "ON",
        "CMAKE_BUILD_TYPE": "Coverage",
        "CMAKE_CONFIGURATION_TYPES": "Coverage",
        "CMAKE_CXX_FLAGS_COVERAGE":
            "-Og -g --coverage -fkeep-inline-functions -fkeep-static-functions",
        "CMAKE_EXE_LINKER_FLAGS_COVERAGE": "--coverage",
        "CMAKE_SHARED_LINKER_FLAGS_COVERAGE": "--coverage"
      }
    },
    {
      "name": "ci-coverage",
      "inherits": [
        "coverage-Linux",
        "dev-mode"
      ],
      "cacheVariables": {
        "COVERAGE_HTML_COMMAND": ""
      }
    },
    {
      "name": "ci-sanitize",
      "binaryDir": "${sourceDir}/build/sanitize",
      "inherits": [
        "gen-Linux",
        "clang-tidy",
        "dev-mode"
      ],
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Sanitize",
        "CMAKE_CONFIGURATION_TYPES": "Sanitize",
        "CMAKE_CXX_FLAGS_SANITIZE":
            "-O2 -g -fsanitize=address,undefined -fno-omit-frame-pointer -fno-common"
      }
    },
    {
      "name": "ci-build",
      "binaryDir": "${sourceDir}/build",
      "installDir": "${sourceDir}/stagedir",
      "cacheVariables": {
        "CMAKE_PREFIX_PATH": {
          "type": "path",
          "value": "${sourceDir}/stagedir"
        }
      },
      "hidden": true
    },
    {
      "name": "ci-Darwin",
      "inherits": [
        "ci-build",
        "gen-Darwin",
        "dev-mode"
      ]
    },
    {
      "name": "ci-macos",
      "inherits": "ci-Darwin"
    },
    {
      "name": "ci-Linux",
      "inherits": [
        "ci-build",
        "gen-Linux",
        "dev-mode"
      ]
    },
    {
      "name": "ci-ubuntu",
      "inherits": "ci-Linux"
    },
    {
      "name": "ci-windows",
      "inherits": [
        "ci-build",
        "gen-win64",
        "dev-mode"
      ]
    }
  ]
}
