cmake_minimum_required(VERSION 3.25...3.31)

project(fmt_moddule_examples LANGUAGES CXX)

if(PROJECT_IS_TOP_LEVEL)
  enable_testing()

  # Find the fmt package containing the function to build the module
  find_package(fmt 11.0.2.1 EXACT REQUIRED HINT ../../stagedir/lib)

  # Use modules?
  unset(USE_MODULES)
  set(CMAKE_CXX_STANDARD 23)
  set(CMAKE_CXX_EXTENSIONS ON)
  set(CMAKE_CXX_STANDARD_REQUIRED ON)
  if(CMAKE_VERSION VERSION_GREATER_EQUAL 3.28.4 AND CMAKE_GENERATOR STREQUAL "Ninja")
    if(CMAKE_CXX_COMPILER_ID STREQUAL "Clang" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 17.0)
      set(USE_MODULES TRUE)
      # see https://releases.llvm.org/15.0.0/projects/libcxx/docs/ReleaseNotes.html
      # Always use libc++
      add_compile_options(-fexperimental-library)
      add_link_options(-lc++experimental)
      add_compile_options(-stdlib=libc++)
      add_link_options(-stdlib=libc++)
    elseif(CMAKE_CXX_COMPILER_ID STREQUAL "GNU" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 14.0)
      set(USE_MODULES TRUE)
    elseif(CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
      set(USE_MODULES TRUE)
    endif()
    message(STATUS "CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES=${CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES}")
  endif()
  if(USE_MODULES)
    # Build the fmt module
    add_fmt_module(fmt_module)
  endif()
endif()

# TODO: list(APPEND ALL_EXAMPLES module/tests/main.cpp)
set(ALL_EXAMPLES)
message(STATUS "Module tests to be built: ${ALL_EXAMPLES}")

foreach(example ${ALL_EXAMPLES})
  add_executable(${example})
  target_sources(${example} PRIVATE ${example}.cpp)
  if(USE_MODULES)
    target_link_libraries(${example} fmt_module)
    target_compile_definitions(${example} PUBLIC USE_MODULES)
  else()
    target_link_libraries(${example} fmt::fmt-header-only)
  endif()
  add_test(NAME module_test_${example} COMMAND echo Test | ${example})
endforeach()
